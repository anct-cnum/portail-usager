////
/// Core Tools : Global flex-properties
/// @group core
////

@use 'sass:map';

@mixin justify-content($value: start, $breakpoint: null) {
  @include respond-from($breakpoint) {
    justify-content: $value;
  }
}

@mixin align-items($value: start, $breakpoint: null) {
  @include respond-from($breakpoint) {
    align-items: $value;
  }
}

@mixin flex-wrap($value: nowrap, $breakpoint: null) {
  @include respond-from($breakpoint) {
    flex-wrap: $value;
  }
}

@mixin flex-direction($value: row, $breakpoint: null) {
  @include respond-from($breakpoint) {
    flex-direction: $value;
  }
}

@mixin flex($value: 0 1 auto, $breakpoint: null) {
  @include respond-from($breakpoint) {
    flex: $value;
  }
}

@mixin build-flex-properties() {
  $places: map.get($flex-properties, 'places');
  $flex-properties-vars: map.get($display-vars, flex-properties);
  $build-breakpoints: map.get($flex-properties-vars, breakpoints);
  $breakpoints-list: if($build-breakpoints == all, $breakpoints, $build-breakpoints);

  @if $flex-properties-vars != false and map.get($flex-properties-vars, active) != false {
    @each $prop, $values in $flex-properties {
      @each $val in $values {
        #{ns($prop)}--#{$val} {
          #{$prop}: #{$val} !important;
        }
      }
    }

    @if $breakpoints-list != false {
      @each $bp, $limit in $breakpoints-list {
        @each $prop, $values in $flex-properties {
          @each $val in $values {
            @include respond-from($bp) {
              #{ns($prop)}--#{$val}-#{$bp} {
                #{$prop}: #{$val} !important;
              }
            }
          }
        }
      }
    }
  }
}
