name: Production continuous integration / deployment on clevercloud

on: workflow_dispatch

env:
  app-name: 'portail-usager-carto-production'
jobs:
  dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.13.1
        uses: actions/setup-node@v2
        with:
          node-version: '16.13.1'
          cache: 'yarn'
      - name: Retrieve cached dependencies
        id: retrieve-dependencies
        uses: actions/cache@v2
        with:
          key: node_modules-${{ hashFiles('yarn.lock') }}
          path: node_modules
      - name: Install dependencies
        if: steps.retrieve-dependencies.outputs.cache-hit == false
        run: yarn --install-frozen-lockfile
      - name: Cache dependencies if not present
        if: steps.retrieve-dependencies.outputs.cache-hit == false
        uses: actions/cache@v2
        with:
          key: node_modules.-${{ hashFiles('yarn.lock') }}
          path: node_modules

  build:
    needs: dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Retrieve dependencies
        uses: actions/cache@v2
        with:
          key: node_modules-${{ hashFiles('yarn.lock') }}
          path: node_modules
      - name: Prepare bundle for deployment
        run: |
          cd dist/${{ env.app-name }}
          touch .htaccess
          HTACCESS=$(cat << EOF
          RewriteEngine On
          DirectoryIndex index.html
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteRule . index.html [L]

          <FilesMatch "index\.html">
          Header set Cache-Control "max-age=60, private, proxy-revalidate"
          </FilesMatch>
          EOF
          )
          echo "$HTACCESS" >> .htaccess
          git config --global init.defaultBranch master
          git config --global user.email dummy@email.fr
          git config --global user.name ClevercloudDeployer
          git init .
          git add .
          git commit -m "Static bundle"
      - name: Upload release bundle as artifact
        uses: actions/upload-artifact@v2
        with:
          name: bundle
          path: dist/${{ env.app-name }}/*

  test:
    needs: dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Retrieve dependencies
        uses: actions/cache@v2
        with:
          key: node_modules-${{ hashFiles('yarn.lock') }}
          path: node_modules
      - name: Execute tests
        run: node_modules/.bin/ng test

  lint:
    needs: dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Retrieve dependencies
        uses: actions/cache@v2
        with:
          key: node_modules-${{ hashFiles('yarn.lock') }}
          path: node_modules
      - name: eslint
        run: node_modules/.bin/ng lint
      - name: stylelint
        run: yarn run stylelint

  deploy:
    needs: [build, test, lint]
    runs-on: ubuntu-latest
    container:
      image: clevercloud/clever-tools
      env:
        CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
        CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}
    steps:
      - name: Retrieve site bundle
        uses: actions/download-artifact@v2
        with:
          name: bundle
          path: .
      - name: Link the application for subsequent operations
        run: clever link ${{ format('{0}', env.app-name) }} --org ${{ secrets.CLEVER_ORG_ID }}
      - name: Deploy the application
        run: clever deploy --force
      - name: Retrieve the deployment url
        run: clever domain
